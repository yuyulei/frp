name: Publish Docker image to Dockerhub Registry and GitHub Package Registry

on:
  push:
    branches: [ master, action ]
  pull_request:
    branches: [ master ]

jobs:
  binary:
    name: Build Golang project
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Check out code into the Go module directory
        uses: actions/checkout@v2
      -
        name: Build
        run: make build
      -
        name: Archive artifacts for frpc
        uses: actions/upload-artifact@v1
        with:
          name: frpc
          path: bin/frpc
      -
        name: Archive artifacts for frps
        uses: actions/upload-artifact@v1
        with:
          name: frps
          path: bin/frps

  image:
    name: Build Image from Dockerfile and binaries
    runs-on: ubuntu-latest
    needs: binary
    steps:
      # environment
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # download binaries of frpc and frps
      -
        name: Download binary of frpc
        uses: actions/download-artifact@v2
        with:
          name: frpc
          path: bin/frpc
      -
        name: Download binary of frps
        uses: actions/download-artifact@v2
        with:
          name: frps
          path: bin/frps
      # get tag
      -
        name: Bump version and create tag
        uses: anothrNick/github-tag-action@1.26.0
        id: bump
        env:
          GITHUB_TOKEN: ${{ secrets.YUYULEI_BUMP_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: matrix,action
          INITIAL_VERSION: 0.0.0
          # setting this tag will invalidate any other settings set!
          # CUSTOM_TAG: 1.0.0
      # check tag result
      -
        name: Check Tag Results
        run: |
          echo ${{ steps.bump.outputs.new_tag }}
          echo ${{ steps.bump.outputs.tag }}
          echo ${{ steps.bump.outputs.part }}
          echo ${{ secrets.YUYULEI_DOCKER_USERNAME }}
          echo ${{ secrets.YUYULEI_DOCKER_PASSWORD }}
      # geneate tags
      -
        name: Prepare envs
        id: prep
        run: |
          echo "dockerfiles/Dockerfile-for-frpc" > DOCKERFILE_FRPC_PATH
          echo "dockerfiles/Dockerfile-for-frps" > DOCKERFILE_FRPS_PATH
          echo "ylyusjtu/matrix-agent:${{ steps.bump.outputs.new_tag }}" > TAG_FRPC
          echo "ylyusjtu/matrix-api:${{ steps.bump.outputs.new_tag }}" > TAG_FRPS
          echo "ghcr.io/${{ github.repository}}/frpc:${{steps.bump.outputs.new_tag}}" > TAG_FRPC_GPR
          echo "ghcr.io/${{ github.repository}}/frps:${{steps.bump.outputs.new_tag}}" > TAG_FRPS_GPR
      # build images
      -
        name: Build Images
        run: |
          # for Docker hub
          docker build --file $(cat DOCKERFILE_FRPC_PATH) --tag $(cat TAG_FRPC) .
          docker build --file $(cat DOCKERFILE_FRPS_PATH) --tag $(cat TAG_FRPS) .
          # for GPR
          docker build --file $(cat DOCKERFILE_FRPC_PATH) --tag $(cat TAG_FRPC_GPR) .
          docker build --file $(cat DOCKERFILE_FRPS_PATH) --tag $(cat TAG_FRPS_GPR) .
      # login dockerhub
      -
        name: Login to DockerHub
        uses: docker/login-action@v1.3.0
        with:
          username: ${{ secrets.YUYULEI_DOCKER_USERNAME }}
          password: ${{ secrets.YUYULEI_DOCKER_PASSWORD }}
      # push to dockerhub
      -
        name: Publish to Dockerhub
        run: |
          echo ${{ secrets.DOKCERHUB_PASSWORD }} | docker login --username $(cat DOCKERHUB_USERNAME) --password-stdin
          docker push $(cat TAG_FRPC)
          docker push $(cat TAG_FRPC)
      # login github registry
      - name: Login to Registry
        uses: docker/login-action@v1.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.YUYULEI_GPR_TOKEN }}
      # push to gpr
      -
        name: Publish to GPR
        run: |
          echo ${{ secrets.YUYULEI_GPR_TOKEN }} | docker login docker.pkg.github.com --username $(cat github.repository_owner) --password-stdin
          docker push $(cat TAG_FRPC_GPR)
          docker push $(cat TAG_FRPS_GPR)
